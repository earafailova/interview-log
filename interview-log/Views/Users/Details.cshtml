@model interview_log.Models.User
@{
    ViewBag.Title = "Details";
}
<script type="text/javascript">

    var CommentValidationError = 'The comment field cannot be empty';
    var FileValidationError = 'Choose the file you want to upload, please!'
    var TagValidationError = 'Tag name cannot be empty'

    function hideTagForm() {
        document.getElementById('tag').style.display = "none";
        document.getElementById('tag_button').style.display = "";
    }
    function showTagForm() {
        document.getElementById('tag').style.display = "";
        document.getElementById('tag_button').style.display = "none";
    }

    function showLarge(id, count) {
        smallAll(count);
        document.getElementById(id).style.display = "none";
        document.getElementById(id + '-large').style.display = "";
    }
    function smallAll(count) {
        for (var i = 0; i < count; i++) {
            document.getElementById(i + '-large').style.display = "none";
            document.getElementById(i).style.display = "";
        }
    }
    function validateComment(comment) {
        if (!comment.value)
            return showAlert(CommentValidationError);
        return true;
    }
    function validateTag(tag) {
        if (!tag.value)
            return showAlert(TagValidationError);
        return true;
    }
    function validateFile(file) {
        if (!file.value)
            return showAlert(FileValidationError);
        return true;
    }
    function showAlert(text) {
        var doc = document.getElementById('alert');
        doc.textContent = text;
        doc.style.display = "";
        return false;
    }
</script>

<h2>Details</h2>
<div class="alert alert-danger" id="alert" style="display:none"></div>
<div>
    <h4>User</h4>
	<hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Position)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Position)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Tags)
        </dt>
        <dd>
            @foreach (var tag in Model.Tags)
            {
                <span class="label label-default" title="@tag.Info">@tag.Name</span>
            }
        </dd>

    </dl>
</div>

<div id="tag" style="display:none">
    @using (Html.BeginForm(actionName: "Tag", controllerName: "Users"))
    {
        <b>Tag it:</b>
        <input type="text" name="tag" id="text" placeholder="Tag"/>
        <input type="text" name="info" id="info" placeholder="Description"/>
        <input type="submit" value="Okay!" class="btn btn-success" onclick="hideTagForm(); return validateTag(tag)" />
    }
</div>
<a href="javascript:showTagForm()" id="tag_button" class="btn btn-success btn-small"><i class="icon-white icon-ok-circle"></i> Tag it!</a>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>



<h3>Images:</h3>
@{
    int i = 0;
    List<interview_log.Models.Attachment> images = Model.Images().ToList();
    int imagesQuantity = images.Count;
}
<table border="1">
    @foreach (var image in images)
    {

        <td>
            <a href="javascript:showLarge('@i', @imagesQuantity)"><img src="~/uploads/images/@Model.Id/@image.Name" width="100" id="@i" title="click to enlarge" /></a>
            <a href="javascript:smallAll(@imagesQuantity)"><img src="~/uploads/images/@Model.Id/@image.Name" width="500" id="@i-large" style="display:none" title="click to make it small again" /></a>
            @Html.ActionLink("delete!", "DeleteAttachment/" + image.Id)
        </td>
        i++;
    }
</table>
<div class="breadcrumb">
    <h3>files:</h3>
    <div class="row">
        @foreach (var file in Model.Files())
        {
            <div class="col-md-4">
                <p>
                    @file.Name <br />
                    @file.Size <br />
                    @Html.ActionLink("delete!", "DeleteAttachment/" + file.Id)
                </p>
                <p><a class="btn btn-danger" href="~/uploads/files/@Model.Id/@file.Name">Get it! &raquo;</a></p>
            </div>
        }
    </div>

    <form action="" method="post" enctype="multipart/form-data">

        <label for="file"></label>
        <input type="file" name="file" id="file" />

        <input type="submit" onclick="return validateFile(file)" />
    </form>

</div>

@if (!Model.Comments.Any())
{
        <div class="well">
            <b>No comments! Be first!</b>
        </div>
    <br />
}
else
{
    <b>Comments:</b>
}

@foreach (var comment in Model.Comments)
{
    <div class="well">
        @Html.ActionLink(comment.Author, "Details/" + comment.AuthorId)
        @comment.Date
        @Html.ActionLink("delete!", "DeleteComment/" + comment.Id)
        <br />
        @comment.Text
    </div>
}

<div class="form-horizontal">

    <div class="form-group">
        @using (Html.BeginForm(actionName: "LeaveComment", controllerName: "Users"))
        {
            <b>leave a comment:</b>
            <br />
            <textarea name="text" id="text"></textarea>
            @Html.HiddenFor(recipient => Model.Id)
            <input type="submit" value="go!" class="btn btn-success" onclick="return validateComment(text)" />
        }

    </div>
</div>
